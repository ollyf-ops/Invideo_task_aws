name: 'Ansible deploy'
on:
  push:
    branches:
      - dev

jobs:
  anisble-deploy:
    name: 'Ansible Deploy'
    runs-on: self-hosted
    defaults:
      run:
        working-directory: /sunny
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Configure SSH
        run: |
          cat >>~/.ssh/config <<END
          Host rd_test
            HostName $HOST
            User $USERNAME
            IdentityFile $KEY
            StrictHostKeyChecking no
          END
        env:
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.KEY }}
          HOST: ${{ secrets.HOST }}

      - name: 'Check ansible connectivity'
          run: ssh rd_test 'sudo ansible testInstances -m ping'

#      - name: 'Executing remote ssh commands using ssh key'
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.KEY }}
#          password: ${{ secrets.PASSWORD }}
#          port: ${{ secrets.PORT }}
#          script_stop: true
#          script: |
#            whoami
      #      - name: executing remote ssh commands using password
      #        uses: appleboy/ssh-action@master
      #        with:
      #          host: ${{ secrets.HOST }}
      #          username: ${{ secrets.USERNAME }}
      #          password: ${{ secrets.PASSWORD }}
      #          port: ${{ secrets.PORT }}
      #          script: whoami
      - name: 'Run Terraform'
        run: |
          ssh rd_test
          cd /home/$USERNAME/
          git clone https://github.com/Shashankreddysunkara/Invideo_task_aws.git
#          cd /home/$USERNAME/actions-runner/_work/$CI_REPOSITORY_NAME/$CI_REPOSITORY_NAME/
          cd /home/$USERNAME/$CI_REPOSITORY_NAME/
          echo "To setup provisioner"
          sudo terraform init
          echo "To launch the EC2 cluster: "
          sudo terraform plan -out=aws.tfplan
          sudo terraform apply aws.tfplan --auto-approve