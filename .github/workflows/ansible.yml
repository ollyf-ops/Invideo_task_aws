name: 'Ansible deploy'
on:
  push:
    branches:
      - dev
env:
  CLONE_DIR: /home/ubuntu/sunny/
#inputs:
#  debug:
#    required: true
#    description: If true, then output debugging information
#    default: true
jobs:
  Ansible_Inventory_check:
    timeout-minutes: 5
    needs: [ Checkout_Repo ]
    runs-on: self-hosted
    steps:
      - name: 'Check ansible inventory connectivity'
        run: ssh rd_test 'sudo ansible testInstances -m ping'
  Deployment_Directory:
    needs: [ Ansible_Inventory_check ]
    runs-on: self-hosted
    steps:
      - name: 'Switch to deployment directory'
        run: ssh rd_test 'cd /home/ubuntu/sunny/" '
  Checkout_Repo:
    needs: [Deployment_Directory]
    runs-on: self-hosted
    steps:
      - name: 'Clone repo in deployment directory'
        if: ${{ steps.Deployment_Directory.outcome == success }} && success()
        shell: bash
        run: ssh rd_test '
          if [ echo "true" ]; then
            echo "Performing git checkout..."
            cd /home/ubuntu/sunny/
            git clone git@github.com-repo-Invideo_task_aws:Shashankreddysunkara/Invideo_task_aws.git
          else
            git pull origin main
            exit
          fi '
#        - name: sync Repo
#            uses: repo-sync/github-sync@v2
#            with:
#              source_repo: "git@github.com-repo-Invideo_task_aws:Shashankreddysunkara/Invideo_task_aws.git"
#              source_branch: "dev"
#              destination_branch: "dev"
      - name: Clone typescript repo
        uses: actions/checkout@v2
        with:
          repository: 'Shashankreddysunkara/Invideo_task_aws'
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          ref: autogenerated
          path: '/home/ubuntu/'
  Git_Branch_Checkout:
    needs: [Deployment_Directory]
    if: ${{ steps.Git_Branch_Checkout.outcome == success }} && success()
    runs-on: self-hosted
    steps:
      - name: 'Checkout git branch'
        run:  ssh rd_test 'cd /home/ubuntu/sunny/Invideo_task_aws/ ;  git checkout dev " '

  Git_Status_Check:
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [Git_Branch_Checkout]
    runs-on: self-hosted
    steps:
      - name: 'git status'
        run: ssh rd_test 'cd /home/ubuntu/sunny/Invideo_task_aws/ ; git status " '

  Git_Diff_Check:
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [Git_Status_Check]
    runs-on: self-hosted
    steps:
      - name: 'git diff'
        run: ssh rd_test 'cd /home/ubuntu/sunny/Invideo_task_aws/ ; git diff " '

  Git_Pull:
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [ Git_Diff_Check ]
    runs-on: self-hosted
    steps:
      - name: "Push to heroku"
        shell: "bash"
        run: |
          git pull git@github.com-repo-Invideo_task_aws:Shashankreddysunkara/Invideo_task_aws.git

  Git_Branch_Check:
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [Git_Diff_Check]
    runs-on: self-hosted
    steps:
      - name: 'git branch'
        run: ssh rd_test 'cd /home/ubuntu/sunny/Invideo_task_aws/ ; git branch ; echo -e "\n Deploying to production server on branch $GITHUB_REF \n" '

  Deploy:
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [Git_Branch_Check]
    runs-on: self-hosted
    steps:
      - name: 'Show pwd and make docker-compose deployment'
        run: ssh rd_test 'cd /home/ubuntu/sunny/Invideo_task_aws/ ; echo -e " Current path of working dir is " ; pwd " '

  Terraform_init:
    name: 'Terraform_init'
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [Deploy]
    runs-on: self-hosted
    steps:
      - name: 'Terraform init'
        run: ssh rd_test 'cd /home/ubuntu/sunny/Invideo_task_aws/ ; echo "\n Setting up provisioner \n " ; sudo terraform init " '

  Terraform_plan:
    name: 'Terraform_plan'
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [Terraform_init]
    runs-on: self-hosted
    steps:
      - name: 'terraform plan'
        run: ssh rd_test 'cd /home/ubuntu/sunny/Invideo_task_aws/ ; sudo terraform plan -out=aws.tfplan  -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" -var "aws_secret_key=${{ secrets.AWS_SECRET_KEY }}" -var "aws_region=eu-central-1" " '

  Terraform_apply:
    name: 'Terraform_apply'
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [Terraform_plan]
    runs-on: self-hosted
    steps:
      - name: 'terraform apply for Launching the EC2 cluster, rds, LB, SG, VPC, SUBNETS, and NAT'
        run: ssh rd_test 'cd /home/ubuntu/sunny/Invideo_task_aws/ ; sudo terraform apply aws.tfplan " '

  print:
    name: Print
    runs-on: ubuntu-latest
    steps:
      - name: Print Outputs
        env:
          slack_outputs: ${{ toJson(on.slack.outputs) }}
        run: |
         echo slack: $slack_outputs

#        - name: Delete workflow runs
#          uses: GitRML/delete-workflow-runs@main
#          with:
#            retain_days: 1
#            keep_minimum_runs: 1